services:
  app:
    container_name: obstetricia_app_nest
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      mssql_init:
        condition: service_completed_successfully
      db_mongo:
        condition: service_started
      db_redis:
        condition: service_started
    ports:
      - ${PORT}:${PORT}
    environment:
      - PORT=${PORT}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_USER=${DB_USER}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - CAPTCHA_SECRET_KEY=${CAPTCHA_SECRET_KEY}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}
      - MONGO_DB=${MONGO_DB}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - EMAIL_ADMIN=${EMAIL_ADMIN}
    networks:
      - obstetricia_network
  db_sqlserver:
    image: mcr.microsoft.com/mssql/server:2025-latest
    container_name: obstetricia_db_sqlserver
    environment:
      SA_PASSWORD: ${DB_PASSWORD}
      ACCEPT_EULA: 'Y'
      MSSQL_PID: 'Express'
    ports:
      - '1433:1433'
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./initdb.sql:/initdb.sql
    networks:
      - obstetricia_network
  mssql_init:
    image: mcr.microsoft.com/mssql-tools:latest
    container_name: obstetricia_db_init
    command: >
      /bin/bash -c "
        echo '⏳ Esperando que SQL Server esté listo...' &&
        until /opt/mssql-tools/bin/sqlcmd -S ${DB_HOST} -U sa -P '${DB_PASSWORD}' -Q 'SELECT 1' -C >/dev/null 2>&1; do
          echo 'SQL Server no está listo aún...'
          sleep 5
        done &&
        echo '✅ SQL Server disponible, ejecutando initdb.sql...' &&
        /opt/mssql-tools/bin/sqlcmd -S ${DB_HOST} -U sa -P '${DB_PASSWORD}' -C -i /tmp/initdb.sql
      "
    volumes:
      - ./initdb.sql:/tmp/initdb.sql
    networks:
      - obstetricia_network

  db_mongo:
    image: mongo:6.0
    container_name: obstetricia_db_mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db
    networks:
      - obstetricia_network
  db_redis:
    image: redis:7.0
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ['redis-server', '/usr/local/etc/redis/redis.conf']
    networks:
      - obstetricia_network

networks:
  obstetricia_network:
    driver: bridge

volumes:
  sqlserver_data:
  mongo_data:
  redis_data:
